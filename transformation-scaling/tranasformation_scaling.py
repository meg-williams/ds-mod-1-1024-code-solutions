# -*- coding: utf-8 -*-
"""tranasformation_scaling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S9NZbizO58CwOgcehpH_oNDZoYrOMIpZ
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler, MaxAbsScaler, RobustScaler, StandardScaler
from scipy.stats import boxcox, yeojohnson
from sklearn.preprocessing import Normalizer

"""**Which scaling method works best for data with outliers?**
Robust Scaler

**Which scaling method produces data that is normally distributed? What is its mean and variance?**
Standard Scaler which has a mean of zero and a variance of 1

**Which scaling method does not remove sparsity? What is sparsity?**
MaxAbs Scaler. Sparsity refers to the amount of zeros or missing data in a set.

**Which scaling method is best to use if the bounds of your data are known from domain knowledge?**
MinMax Scaler
"""

df = pd.read_csv('mtcars_mod.csv')
df

plt.boxplot(df.drat);

sns.kdeplot(df['disp'])

mms = MinMaxScaler()
mms.fit(df[['disp']])

df['disp_mms'] = mms.transform(df[['disp']])

rs = RobustScaler()
rs.fit(df[['wt', 'drat']])

df[['wt_rs', 'drat_rs']] = rs.transform(df[['wt', 'drat']])

mabs = MaxAbsScaler()
mabs.fit(df[['hp']])

df[['hp_mabs']] = mabs.transform(df[['hp']])

qsec_yj, lmbd = yeojohnson(df.qsec)

qsec_yj

mpg_bc, lmbd = boxcox(df.mpg)

mpg_bc

norm = Normalizer()
norm.fit(df.select_dtypes(exclude=object))

df_norm = norm.transform(df.select_dtypes(exclude=object))

df_norm